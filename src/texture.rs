use bevy::prelude::*;
use bevy::render::render_resource::*;

pub fn texture() -> Image {
    let texture_data: [u8; 256] = [
        255, 0, 0, 255, //
        0, 255, 0, 255, //
        0, 0, 255, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        // //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        // //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        // //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        255, 0, 0, 255, //
        0, 255, 0, 255, //
        0, 0, 255, 255, //

             // //
    ];
    //
    let _texture_data: [u8; 256] = [
        255, 0, 0, 255, //
        0, 255, 0, 255, //
        0, 0, 255, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        //
        0, 255, 255, 255, //
        255, 0, 255, 255, //
        255, 255, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 255, 255, 255, //
        255, 0, 255, 255, //
        255, 255, 0, 255, //
        //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        0, 0, 0, 255, //
        255, 0, 0, 255, //
        0, 255, 0, 255, //
        0, 0, 255, 255, //
    ];

    Image::new_fill(
        Extent3d {
            width: 4,   // toroidal
            height: 16, // poloidal
            depth_or_array_layers: 1,
        },
        TextureDimension::D2,
        &texture_data,
        TextureFormat::Rgba8UnormSrgb,
    )
}
